<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_dstl_risk_hazard_controls</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_dstl_risk_hazard_controls">low_medium_or_highVALCHANGES^EQ<item display_value="-- None --" endquery="false" field="low_medium_or_high" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Authorisation Level</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var riskLevel = 'low';
	
	var hazardControl = new GlideRecord('x_snc_dstl_risk_hazard_controls');
	hazardControl.addQuery('risk_assessment', current.risk_assessment);
	hazardControl.query();
	
	while (hazardControl.next()) {
		if (riskLevel == 'low') {
			if (hazardControl.low_medium_or_high == 'high' || hazardControl.low_medium_or_high == 'medium') {
				riskLevel = hazardControl.low_medium_or_high;
			}			
		}
		if (riskLevel == 'medium') {
			if (hazardControl.low_medium_or_high == 'high') {
				riskLevel = hazardControl.low_medium_or_high;
			}
		}
		if (riskLevel =='high') {
			break;
		}
	}
	
	var riskAssessment = new GlideRecord('x_snc_dstl_risk_risk_assessments');
	riskAssessment.get(current.risk_assessment.sys_id);
	riskAssessment.authorisation_level = riskLevel;
	riskAssessment.update();


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-11-13 08:48:36</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a4cf385edb45c41099c9f9e1399619c5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Authorisation Level</sys_name>
        <sys_overrides/>
        <sys_package display_value="Risk Assessments" source="x_snc_dstl_risk">3342d882db81841085212b870596194a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Risk Assessments">3342d882db81841085212b870596194a</sys_scope>
        <sys_update_name>sys_script_a4cf385edb45c41099c9f9e1399619c5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-11-13 08:48:36</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=a4cf385edb45c41099c9f9e1399619c5"/>
</record_update>
